<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<aop:aspectj-autoproxy/> <!-- 모든 Controller가 공통으로 수행하는 기능을 모아 관리 ex)footer, 인기순위, 광고 -->
	<context:component-scan base-package="com.sist.*"/>
	<!-- 
		사용자 정의 클래스를 선택적으로 메모리 할당 관리
		@Component - 일반 클래스 : ~Manager(Open API)
		@Repository - 데이터베이스 연동 : ~DAO
		@Service - BI DAO 여러개를 모아서 관리 : ~Service
		@Controller - Model클래스, 요청처리 후에 결과값을 JSP로 전송 :  ~Controller
		@RestController - Model클래스, JavaScript와 연동, JSON : ~RestController
		@ControllerAdvice - Controller클래서의 공통기반의 예외처리
 		@Configuration - XML 대신 자바로 클래스 설정
	-->
	
	<!-- Tiles 설정파일 읽기 : tiles.xml -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
		p:definitions="/WEB-INF/tiles.xml"
	/>

	<!-- TilesView 설정 -->
	<bean id="tilesResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView"
		p:order="0"
	/>
	<!-- ViewResolver 설정 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/"
		p:suffix=".jsp"
		p:order="1"
	/>
	
	<!-- MultipartResolver -->
	
</beans>
